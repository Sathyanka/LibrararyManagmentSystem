
import java.sql.*;
import java.awt.Image;
//import java.beans.Statement;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Prabuddi Sathyanka
 */
public class RegisterBooks extends javax.swing.JFrame {
              
       
       
    
    /**
     * Creates new form RegisterBooks
     */
    public RegisterBooks() {
        initComponents();
        DisplayBooks();
    }
public void DisplayBooks(){
    try{
       
       
        String sql = "SELECT * FROM `booktbl`";
        PreparedStatement p = MyConnection.getConnection().prepareStatement(sql);
        ResultSet rs = p.executeQuery();
        DefaultTableModel tm=(DefaultTableModel)tblBooks.getModel();
          
          tm.setRowCount(0);
while(rs.next())
{
   Object o[]={rs.getInt("bookID"),rs.getString("title"),rs.getString("author"),rs.getInt("price"),rs.getInt("quantity")};
       tm.addRow(o);
      
}
          
    
    
    }catch(Exception e){
    
    System.out.println(e.getMessage());
    
    }

}
int bookID;
private void BookCount(){
 try{       
        String sql = "SELECT MAX(bookID) FROM `booktbl`";
          PreparedStatement p = MyConnection.getConnection().prepareStatement(sql);
          ResultSet rs1 = p.executeQuery();
          rs1.next();
          bookID = rs1.getInt(1)+1;
     
 }catch (Exception e){
 
 }

}
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblBooks = new javax.swing.JLabel();
        lblStudents = new javax.swing.JLabel();
        lblLibrarian = new javax.swing.JLabel();
        lblReturnBooks = new javax.swing.JLabel();
        lblIssueBooks = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        txtAuthor = new javax.swing.JTextField();
        lblPrice = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        lblRegisterBooks = new javax.swing.JLabel();
        lblBookCoverImage = new javax.swing.JLabel();
        lblBookTitle = new javax.swing.JLabel();
        lblAuthor = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JLabel();
        lblBookCover = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBooks = new javax.swing.JTable();
        btnBrows = new javax.swing.JButton();
        txtBookTitle = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));

        lblBooks.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        lblBooks.setForeground(new java.awt.Color(204, 204, 204));
        lblBooks.setText("Books");

        lblStudents.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        lblStudents.setForeground(new java.awt.Color(204, 204, 204));
        lblStudents.setText("Students");

        lblLibrarian.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        lblLibrarian.setForeground(new java.awt.Color(204, 204, 204));
        lblLibrarian.setText("Librarian");

        lblReturnBooks.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        lblReturnBooks.setForeground(new java.awt.Color(204, 204, 204));
        lblReturnBooks.setText("Return Books");

        lblIssueBooks.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        lblIssueBooks.setForeground(new java.awt.Color(204, 204, 204));
        lblIssueBooks.setText("Issue Books");

        lblUserName.setBackground(new java.awt.Color(204, 204, 255));
        lblUserName.setForeground(new java.awt.Color(204, 204, 204));
        lblUserName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserName.setText("User");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblIssueBooks)
                            .addComponent(lblReturnBooks)
                            .addComponent(lblLibrarian)
                            .addComponent(lblStudents)
                            .addComponent(lblBooks))
                        .addGap(54, 54, 54))
                    .addComponent(lblUserName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(481, 481, 481))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(lblBooks)
                .addGap(27, 27, 27)
                .addComponent(lblLibrarian)
                .addGap(33, 33, 33)
                .addComponent(lblStudents)
                .addGap(33, 33, 33)
                .addComponent(lblIssueBooks)
                .addGap(34, 34, 34)
                .addComponent(lblReturnBooks)
                .addContainerGap(183, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(211, 211, 211));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        txtAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAuthorActionPerformed(evt);
            }
        });

        lblPrice.setText("Price");

        lblRegisterBooks.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRegisterBooks.setText("Register Books");

        lblBookCoverImage.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblBookTitle.setText("Book Title");

        lblAuthor.setText("Author");

        lblQuantity.setText("Quantity");

        lblBookCover.setText("Book Cover");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tblBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Book_ID", "Title", "Author", "Price", "Quantity"
            }
        ));
        tblBooks.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblBooks.setRowHeight(23);
        tblBooks.setSelectionBackground(new java.awt.Color(204, 204, 255));
        tblBooks.setShowGrid(false);
        tblBooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBooksMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblBooks);

        btnBrows.setText("Brows");
        btnBrows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowsActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblQuantity)
                                .addGap(27, 27, 27))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnSave)
                                            .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(22, 22, 22))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(lblBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(14, 14, 14)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblBookCover, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnUpdate)
                                        .addGap(32, 32, 32)
                                        .addComponent(btnClear)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnDelete)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnBrows)
                .addGap(20, 20, 20))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(151, 151, 151)
                            .addComponent(lblRegisterBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(333, 333, 333)
                            .addComponent(lblBookCoverImage, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(18, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQuantity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblBookTitle))
                    .addComponent(lblBookCover))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAuthor))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrice))
                .addGap(1, 1, 1)
                .addComponent(btnBrows)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate)
                    .addComponent(btnClear)
                    .addComponent(btnDelete))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(3, 3, 3)
                    .addComponent(lblRegisterBooks)
                    .addGap(64, 64, 64)
                    .addComponent(lblBookCoverImage, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(305, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAuthorActionPerformed

    public ImageIcon ResizeCover(String ImagePath,byte[] pic){
        ImageIcon MyImage = null;
        if(ImagePath != null){
         MyImage = new ImageIcon(ImagePath);
        }
        else{
        MyImage = new ImageIcon(pic);
        }
        
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(lblBookCoverImage.getWidth(),lblBookCoverImage.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
    String imgPath ;
    private void btnBrowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowsActionPerformed
        //Search for book cover image
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".Images","jpg","gif", "JPEG");
        file.addChoosableFileFilter(filter);
        int result = file.showOpenDialog(file);
        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            lblBookCoverImage.setIcon (ResizeCover(path,null));
            imgPath = path;
    
    }
        else if(result == JFileChooser.CANCEL_OPTION){
                
                JOptionPane.showMessageDialog(this,"No File Selected");
                }
    }//GEN-LAST:event_btnBrowsActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(txtBookTitle.getText().isEmpty()|| txtAuthor.getText().isEmpty()|| txtPrice.getText().isEmpty()|| txtQuantity.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"Missing Information");
        
        }
        
        else{
                  
                  String bookTitle= txtBookTitle.getText();
                  String author= txtAuthor.getText();                  
                  int quantity = Integer.valueOf(txtQuantity.getText());
                  int price = Integer.valueOf(txtPrice.getText());
                  InputStream img = null;
            try {
                img = new FileInputStream(imgPath);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(RegisterBooks.class.getName()).log(Level.SEVERE, null, ex);
            }
                  
                  
        
        
        try {
            PreparedStatement ps;      
            BookCount();
            String sql = ("INSERT INTO `booktbl`(`bookID`, `title`, `author`, `price`, `quantity`, `cover`) VALUES (?,?,?,?,?,?)");
            ps = MyConnection.getConnection().prepareStatement(sql);           
//            ps.execute(sql);
            ps.setInt(1,bookID);
            ps.setString(2,bookTitle);
            ps.setString(3,author);
            
            ps.setInt(5,quantity);
            ps.setInt(4,price);          
            ps.setBlob(6,img);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(this,"Book details added Successfully!");
            ps.close();
          DisplayBooks();
            
        } catch (SQLException ex) {
            Logger.getLogger(RegisterBooks.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
         
        txtBookTitle.setText("");
         txtAuthor.setText("");
         txtPrice.setText("");
         txtQuantity.setText("");
         lblBookCoverImage.setIcon (ResizeCover("",null));
        
       
    }//GEN-LAST:event_btnClearActionPerformed
private void GetBookCover(){
    try{
       PreparedStatement ps;      
        String sql = "SELECT cover FROM `booktbl` WHERE `bookID`="+key;
        
        ps = MyConnection.getConnection().prepareStatement(sql);           
            ps.execute(sql);
        
        ResultSet rs1 = ps.executeQuery();
         if(rs1.next()){
          lblBookCoverImage.setIcon(ResizeCover(null,rs1.getBytes("cover")));
         }
          
    }
    catch(Exception e){
    }

}
    int key = 0;

    private void tblBooksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBooksMouseClicked
        // TODO add your handling code here:
                  DefaultTableModel tableModel=(DefaultTableModel)tblBooks.getModel();
                  int myIndex  = tblBooks.getSelectedRow();
                  key = Integer.valueOf(tableModel.getValueAt(myIndex, 0).toString());
                  txtBookTitle.setText(tableModel.getValueAt(myIndex, 1).toString());
                  txtAuthor.setText(tableModel.getValueAt(myIndex, 2).toString());
                  txtPrice.setText(tableModel.getValueAt(myIndex, 3).toString());
                  txtQuantity.setText(tableModel.getValueAt(myIndex, 4).toString());
                  GetBookCover();
          
    }//GEN-LAST:event_tblBooksMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if (key == 0){
            JOptionPane.showMessageDialog(this,"Select A Book!!!");
        
        }else{
            try{
             PreparedStatement ps;        
            String sql = "DELETE FROM `booktbl` WHERE `bookID`="+key;
            ps = MyConnection.getConnection().prepareStatement(sql);           
            ps.execute(sql);
            JOptionPane.showMessageDialog(this,"Book Deleted Successfuly!!");
            DisplayBooks();
            
            }catch(Exception e){
              System.out.println(e.getMessage());
            
            }
        
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
               
        if (imgPath!= null){
        try{
            InputStream img = new FileInputStream(imgPath);
            PreparedStatement ps;        
            String sql = "UPDATE `booktbl` SET `bookID`=?,`title`=?,`author`=?,`price`=?,`quantity`=?,`cover`=? WHERE `bookID`="+key;
            ps = MyConnection.getConnection().prepareStatement(sql);
            ps.setInt(1,bookID);
            ps.setString(2,txtBookTitle.getText());
            ps.setString(3,txtAuthor.getText());   
            ps.setInt(4,Integer.valueOf(txtPrice.getText())); 
            ps.setInt(5,Integer.valueOf(txtQuantity.getText()));         
            ps.setBlob(6,img);
            
             if(ps.executeUpdate() > 0){
                
                  
            DisplayBooks();
            JOptionPane.showMessageDialog(this,"Book updated Successfuly!!");
            }
            else{
            
            JOptionPane.showMessageDialog(this,"Missing Information!");
           // System.out.println(e.getMessage());
            }
            
            
        }
        catch( Exception e){
        JOptionPane.showMessageDialog(this,"Mising information");
         System.out.println(e.getMessage());
        }
        
        }
        else{
        JOptionPane.showMessageDialog(this,"No image Is selected!!");
        
        }

imgPath=null;
            
     
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterBooks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrows;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAuthor;
    private javax.swing.JLabel lblBookCover;
    private javax.swing.JLabel lblBookCoverImage;
    private javax.swing.JLabel lblBookTitle;
    private javax.swing.JLabel lblBooks;
    private javax.swing.JLabel lblIssueBooks;
    private javax.swing.JLabel lblLibrarian;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblRegisterBooks;
    private javax.swing.JLabel lblReturnBooks;
    private javax.swing.JLabel lblStudents;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JTable tblBooks;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtBookTitle;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
